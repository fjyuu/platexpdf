#!/usr/bin/env perl

=head1 NAME

 platexpdf

=head1 DESCRIPTION

 This script executes `platex` and `dvipdfmx`.

=head1 SYNOPSIS

 platexpdf [options] [--] texfile

 Options:
   -b, --bibtex              use bibTeX
   -c, --clean EXTENSION     set unwanted file extension (e.g. dvi)
   -d, --delete EXTENSION    set file extension which is deleted before `platex` (e.g. xbb)
   -f, --fontmap FILENAME    set font map file name (e.g. cid-x.map)
   -h, --help                show this help message
   -k, --kanji ENCODING      set Japanese encoding (euc|jis|sjis|utf8)
   -l, --landscape           landscape mode
   -p, --papersize PAPERSIZE set papersize (e.g. a4)
   -w, --watch FILE          set watched file

=head1 LICENSE

 The MIT License (MIT)

 Copyright (c) 2013 Yuki Fujii

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.

=cut

use strict;
use warnings;
use Getopt::Long qw/:config posix_default no_ignore_case bundling auto_help/;
use Pod::Usage qw/pod2usage/;
use Encode::Guess qw/euc-jp shiftjis 7bit-jis/;
use File::Find;
use File::Basename qw/basename dirname/;

# 引数処理
GetOptions(\my %opt, qw/ fontmap|f=s@
                         clean|c=s@
                         delete|d=s@
                         watch|w:s@
                         kanji|k=s
                         papersize|p=s
                         landscape|l
                         bibtex|b /) or pod2usage(1);
pod2usage(1) if (@ARGV != 1);
die "cannot find file '$ARGV[0]'\n" unless (-e $ARGV[0]);

my $dir = dirname($ARGV[0]);
my $file = basename($ARGV[0]);
chdir $dir or die $!;

# コマンド定義
my $platex_cmd = "platex";
my @platex_opt = qw( -interaction=nonstopmode -halt-on-error
                     -src-specials -shell-escape -file-line-error );
my $dvipdf_cmd = "dvipdfmx";
my @dvipdf_opt = map {("-f", $_)} @{$opt{fontmap}};
push @dvipdf_opt, "-p", $opt{papersize} if ($opt{papersize});
push @dvipdf_opt, "-l" if ($opt{landscape});
my $bibtex_cmd = "pbibtex";

# 文字コード推測
if (! $opt{kanji}) {
    my $enc = guess_encoding(do {
        open my $fh, "<", $file or die $!;
        local $/;
        <$fh>;
    });
    ref($enc) or die "cannot guess kanji-code: $enc";
    $opt{kanji} = ($enc->name eq "shiftjis") ? "sjis" :
                  ($enc->name eq "7bit-jis") ? "jis"  :
                  ($enc->name eq "euc-jp")   ? "euc"  :
                  ($enc->name eq "ascii")    ? "utf8" : $enc->name;
}
die "cannot compile kanji-code '$opt{kanji}'. choose from (euc|jis|sjis|utf8)"
    unless ($opt{kanji} =~ /^(?:euc|jis|sjis|utf8)$/);
die "your `$platex_cmd` does not support utf8 encoding\n"
    if ($opt{kanji} eq "utf8" && ! &utf8_ok);

push @platex_opt, "-kanji=$opt{kanji}";

&platexpdf;

if ($opt{watch}) {
    eval {require Filesys::Notify::Simple; 1}
        or die "Filesys::Notify::Simple is required to watch changes of files";

    my @paths = map {$_ or $file} @{$opt{watch}};
    if ($^O eq "darwin" && grep {-f $_} @paths) {
        $^O = "freebsd"; # Mac::FSEventsではファイル監視ができないから
                         # Filesys::Notify::KQueueを使ってほしい
    }
    warn sprintf "Start watching %s\n", join ',', @paths;
    while (1) {
        my $watcher = Filesys::Notify::Simple->new(\@paths);
        $watcher->wait(\&platexpdf); # block
    }
}

sub platexpdf {
    # カレントディレクトリ以下のいらないファイルを前もって削除
    find(sub {
             for my $extension (@{$opt{delete}}) {
                 unlink $_ if (/\.$extension$/);
             }
         }, "./") if ($opt{delete});

    # コマンド実行
    (my $base_name = $file) =~ s/\.[^.]*$//;
    if ($opt{bibtex}) {
        (-f "$base_name.aux")
            or !system($platex_cmd, @platex_opt, $file)
                or die "cannot create $base_name.aux";
        !system($bibtex_cmd, "$base_name.aux")
            or die "cannot create bibTeX files";
    }
    system($platex_cmd, @platex_opt, $file)
        or system($dvipdf_cmd, @dvipdf_opt, "$base_name.dvi");

    # 中間ファイル削除
    unlink $_ for (grep -e $_, map("$base_name.$_", @{$opt{clean}}));
}

sub utf8_ok {
    my $platex_help = `$platex_cmd --help`;
    $platex_help =~ /set Japanese encoding \(STRING=euc\|jis\|sjis\|utf8\)/;
}
